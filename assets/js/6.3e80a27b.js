(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{172:function(n,s,e){"use strict";e.r(s);var a=e(0),t=Object(a.a)({},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"content"},[n._m(0),n._v(" "),n._m(1),n._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/sisterAn/JavaScript-Algorithms/issues/1",target:"_blank",rel:"noopener noreferrer"}},[n._v("github地址"),e("OutboundLink")],1)]),n._v(" "),e("p",[n._v("一、为什么引入复杂度分析")]),n._v(" "),e("p",[n._v("我们知道，好的数据结构与算法能够大大缩短代码的执行时间与存储空间，那么我们如何去衡量它喃？本节就主要介绍算法性能的衡量指标—复杂度分析。")]),n._v(" "),e("p",[n._v("判断一段代码执行的效率最简单最直观的方式就是把它放在机器上执行一遍，自然就会得到算法的执行时间与占用内存大小。那么为什么还要引入复杂度分析喃？")]),n._v(" "),e("p",[n._v("这主要是因为，通过机器上运行代码来统计算法的性能，有很大的局限性，它容易受测试环境、数据规模影响：")]),n._v(" "),e("p",[n._v("统计结果易受测试环境影响：不同系统、处理器的机器测试结果可能出现很大的不同\n统计结果易受数据本身、数据规模影响：不同的数据、不同长度的数据都可能对测试结果产生巨大的影响\n而这些都不是我们想要看到的。我们需要的是不受外在因素影响的、大致的估计算法执行效率的方法。这就是使用复杂度分析的原因。")]),n._v(" "),e("p",[n._v("二、如何表示复杂度\n如何表示算法复杂度，具体来讲就是代码执行的时间、执行消耗的存储空间。例如：")]),n._v(" "),n._m(2),e("p",[n._v("从 CPU 的角度看，每段代码不过是读写数据或操作数据，尽管每次操作 CPU 执行的个数、执行的时间都不同，但我们粗咯把每次执行的时间都一致，称为 unit_time 。")]),n._v(" "),e("p",[n._v("所以上述代码总共执行 (2n+2)*unit_time 时间，即：T(n)=(2n+2)*unit_time ，所以，我们可以写成：")]),n._v(" "),e("p",[n._v("T(n) = O(f(n))\n其中：")]),n._v(" "),e("p",[n._v("n：表示数据规模的大小\nf(n)：表示每行代码执行的次数总和\nO：表示代码的执行时间 T(n) 与 f(n) 表达式成正比\n当 n 很大时，例如 10000，甚至更大，T(n) = O(f(n)) 可以表示为 T(n) = O(n) 。")]),n._v(" "),e("p",[n._v("这就是大 O 时间复杂度表示法。大 O 时间复杂度实际上并不具体表示代码真正的执行时间，而是表示代码执行时间随数据规模增长的变化趋势，所以，也叫作渐进时间复杂度（asymptotic time complexity），简称时间复杂度。")]),n._v(" "),e("p",[n._v("三、时间复杂度\n当 n 无限大时，时间复杂度 T(n) 受 n 的最高数量级影响最大，与f(n) 中的常量、低阶、系数关系就不那么大了。所以我们分析代码的时间复杂度时，仅仅关注代码执行次数最多的那段就可以了。")]),n._v(" "),e("p",[n._v("看一个例子：")]),n._v(" "),n._m(3),e("p",[n._v("fun1 中第1行都是常量，对 n 的影响不大，所以总的时间复杂度要看第2、3行的循环，即时间复杂度为： O(n) 。")]),n._v(" "),e("p",[n._v("fun2 中循环1的时间复杂度为 O(n) ，循环2的时间复杂度为 O(n2)，当 n 趋于无穷大时，总体的时间复杂度要趋于 O(n2) ，即上面代码的时间复杂度是 O(n2)。")]),n._v(" "),e("p",[n._v("fun3 的时间复杂度是 O(n * T(fun)) = O(n*n) ，即 O(n2) 。")]),n._v(" "),e("p",[n._v("所以：T(c+n)=O(n)，T(m+n)=O(max(m, n))，T(n) = T1(n) T2(m) = O(nm)，其中 c 为常量")]),n._v(" "),e("p",[n._v("常见复杂度（按数量阶递增）\n多项式量级：")]),n._v(" "),e("p",[n._v("常量阶： O(1)：当算法中不存在循环语句、递归语句，即使有成千上万行的代码，其时间复杂度也是Ο(1)\n对数阶：O(logn): 简单介绍一下")]),n._v(" "),n._m(4),e("p",[n._v("每次循环 i 都乘以 2 ，直至 i > n ，即执行过程是：20、21、22、…、2k、…、2x、 n\n所以总执行次数 x ，可以写成 2x = n ，则时间复杂度为 O(log2n) 。这里是 2 ，也可以是其他常量 k ，时间复杂度也是： O(log3n) = O(log32 * log2n) = O(log2n)\n线性阶：O(n)\n线性对数阶：O(nlogn)\n平方阶、立方阶、….、k次方阶：O(n2)、O(n3)、…、O(nk)\n非多项式量阶：")]),n._v(" "),e("p",[n._v("指数阶：O(2k)\n阶乘阶：O(n!)\n四、空间复杂度\n时间复杂度表示算法的执行时间与数据规模之间的增长关系。类比一下，空间复杂度表示算法的存储空间与数据规模之间的增长关系。例如：")]),n._v(" "),n._m(5),e("p",[n._v("以上代码我们可以清晰的看出代码执行的空间为 O(1+n) = O(n)，即为 i 及数组 a 占用的储存空间。")]),n._v(" "),e("p",[n._v("所以，空间复杂度分析比时间复杂度分析要简单很多。")]),n._v(" "),e("p",[n._v("五、平均时间复杂度\n时间复杂度受数据本身影响，还分为：")]),n._v(" "),e("p",[n._v("最好时间复杂度：在最理想的情况下，执行这段代码的时间复杂度\n最坏时间复杂度：在最糟糕的情况下，执行这段代码的时间复杂度\n平均时间复杂度：所有情况下，求一个平均值，可以省略掉系数、低阶、常量")]),n._v(" "),n._m(6),n._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/sisterAn/JavaScript-Algorithms/issues/2",target:"_blank",rel:"noopener noreferrer"}},[n._v("github地址"),e("OutboundLink")],1)]),n._v(" "),e("p",[n._v("一、数组（基础）\n一种最基础的数据结构，每种编程语言都有，它编号从 0 开始，代表一组连续的储存结构，用来储存同一种类型的数据。")]),n._v(" "),n._m(7),e("p",[n._v("它的这种特定的存储结构（连续存储空间存储同一类型数据）决定了：")]),n._v(" "),e("p",[n._v("优点")]),n._v(" "),e("p",[n._v("随机访问：可以通过下标随机访问数组中的任意位置上的数据\n缺点")]),n._v(" "),e("p",[n._v("对数据的删除和插入不是很友好\n查找： 根据下标随机访问的时间复杂度为 O(1)；")]),n._v(" "),e("p",[n._v("插入或删除： 时间复杂度为 O(n)；")]),n._v(" "),e("p",[n._v("在 JavaScript 中的数组几乎是万能的，它不光可以作为一个普通的数组使用，可以作为栈或队列使用。")]),n._v(" "),e("p",[n._v("数组：")]),n._v(" "),n._m(8),e("p",[n._v("二、JavaScript 中，数组可以保存不同类型值\n看一下 Chrome v8 源码：")]),n._v(" "),n._m(9),e("p",[n._v("我们可以看到 JSArray 是继承自 JSObject 的，所以在 JavaScript 中，数组可以是一个特殊的对象，内部也是以 key-value 形式存储数据，所以 JavaScript 中的数组可以存放不同类型的值。")]),n._v(" "),e("p",[n._v("三、JavaScript 中，数组的存储")]),n._v(" "),n._m(10),e("p",[n._v("JSArray 继承于 JSObject ，从注释上看，它有两种存储方式：")]),n._v(" "),e("p",[n._v("fast：存储结构是 FixedArray ，并且数组长度 <= elements.length() ，push 或 pop 时可能会伴随着动态扩容或减容\nslow：存储结构是 HashTable（哈希表），并且数组下标作为 key\nfast 模式下数组在源码里面叫 FastElements ，而 slow 模式下的叫做 SlowElements 。")]),n._v(" "),n._m(11),n._v(" "),n._m(12),e("p",[n._v("从源码中可以看出，它的内部就是一个 HashTable。")]),n._v(" "),n._m(13),n._v(" "),n._m(14),e("p",[n._v("所以，当处于以下情况时，快数组会被转变为慢数组：")]),n._v(" "),e("p",[n._v("当加入的索引值 index 比当前容量 capacity 差值大于等于 1024 时（index - capacity >= 1024）\n快数组新容量是扩容后的容量 3 倍之多时\n例如：向快数组里增加一个大索引同类型值")]),n._v(" "),n._m(15),e("p",[n._v("当往 arr 增加一个 2000 的索引时，arr 被转成慢数组。节省了大量的内存空间（从索引为 2 到索引为 2000）。")]),n._v(" "),n._m(16),n._v(" "),n._m(17),e("p",[n._v("当慢数组的元素可存放在快数组中且长度在 smi 之间且仅节省了50%的空间，则会转变为快数组")]),n._v(" "),e("p",[n._v("四、JavaScript 中，数组的动态扩容与减容（FastElements）\n默认空数组初始化大小为 4 :")]),n._v(" "),n._m(18),e("p",[n._v("在 JavaScript 中，当数组执行 push 操作时，一旦发现数组内存不足，将进行扩容。")]),n._v(" "),e("p",[n._v("在 Chrome 源码中， push 的操作是用汇编实现的，在 c++ 里嵌入的汇编，以提高执行效率，并且在汇编的基础上用 c++ 封装了一层，在编译执行的时候，会将这些 c++ 代码转成汇编代码。")]),n._v(" "),e("p",[n._v("计算新容量的函数：")]),n._v(" "),n._m(19),e("p",[n._v("所以扩容后新容量计公式为：")]),n._v(" "),e("p",[n._v("new_capacity = old_capacity /2 + old_capacity + 16")]),n._v(" "),e("p",[n._v("即老的容量的 1.5 倍加上 16 。初始化为 4 个，当 push 第 5 个的时候，容量将会变成：")]),n._v(" "),e("p",[n._v("new_capacity = 4 / 2 + 4 + 16 = 22")]),n._v(" "),e("p",[n._v("接着申请一块这么大的内存，把老的数据拷过去，把新元素放在当前 length 位置，然后将数组的 length + 1，并返回 length。")]),n._v(" "),e("p",[n._v("所以，扩容可以分为以下几步：")]),n._v(" "),e("p",[n._v("push 操作时，发现数组内存不足\n申请 new_capacity = old_capacity /2 + old_capacity + 16 那么长度的内存空间\n将数组拷贝到新内存中\n把新元素放在当前 length 位置\n数组的 length + 1\n返回 length\n整个过程，用户是无感知的，不像 C，需用用户手动申请内存空间。")]),n._v(" "),e("p",[n._v("当数组执行 pop 操作时，会判断 pop 后数组的容量，是否需要进行减容。")]),n._v(" "),e("p",[n._v("不同于数组的 push 使用汇编实现的， pop 使用 c++ 实现的。")]),n._v(" "),e("p",[n._v("判断是否进行减容：")]),n._v(" "),n._m(20),e("p",[n._v("所以，当数组 pop 后，如果数组容量大于等于 length 的 2 倍，则进行容量调整，使用 RightTrimFixedArray 函数，计算出需要释放的空间大小，做好标记，等待 GC 回收；如果数组容量小于 length 的 2 倍，则用 holes 对象填充。")]),n._v(" "),e("p",[n._v("所以，减容可以分为以下几步：")]),n._v(" "),e("p",[n._v("pop 操作时，获取数组 length\n获取 length - 1 上的元素（要删除的元素）\n数组 length - 1\n判断数组的总容量是否大于等于 length - 1 的 2 倍\n是的话，使用 RightTrimFixedArray 函数，计算出需要释放的空间大小，并做好标记，等待 GC 回收\n不是的话，用 holes 对象填充\n返回要删除的元素\n五、解答开篇问题\nJavaScript 中， JSArray 继承自 JSObject ，或者说它就是一个特殊的对象，内部是以 key-value 形式存储数据，所以 JavaScript 中的数组可以存放不同类型的值。它有两种存储方式，快数组与慢数组，初始化空数组时，使用快数组，快数组使用连续的内存空间，当数组长度达到最大时，JSArray 会进行动态的扩容，以存储更多的元素，相对慢数组，性能要好得多。当数组中 hole 太多时，会转变成慢数组，即以哈希表的方式（ key-value 的形式）存储数据，以节省内存空间。")]),n._v(" "),e("p",[n._v("六、最后附赠一道前端面试题（腾讯）：数组扁平化、去重、排序\n关于 Array 的属性、方法这里不再做介绍，详看 MDN Array 。")]),n._v(" "),e("p",[n._v("面试题：")]),n._v(" "),e("p",[n._v("已知如下数组：var arr = [ [1, 2, 2], [3, 4, 5, 5], [6, 7, 8, 9, [11, 12, [12, 13, [14] ] ] ], 10];")]),n._v(" "),e("p",[n._v("编写一个程序将数组扁平化去并除其中重复部分数据，最终得到一个升序且不重复的数组")]),n._v(" "),e("p",[n._v("答案：")]),n._v(" "),n._m(21)])},[function(){var n=this.$createElement,s=this._self._c||n;return s("h2",{attrs:{id:"算法与数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法与数据结构","aria-hidden":"true"}},[this._v("#")]),this._v(" 算法与数据结构")])},function(){var n=this.$createElement,s=this._self._c||n;return s("h3",{attrs:{id:"一-如何分析、统计算法的执行效率和资源消耗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-如何分析、统计算法的执行效率和资源消耗","aria-hidden":"true"}},[this._v("#")]),this._v(" 一 如何分析、统计算法的执行效率和资源消耗")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function cal(n) {\n    let sum = 0; // 1 unit_time\n    let i = 0; // 1 unit_time\n    for(; i <= n; i++) { // n unit_time\n        sum += i; // n unit_time\n    }\n    return sum\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function fun1(n) {\n    let sum = 0,i = 0; \n    for(; i <= n; i++) {\n        sum += i; \n    }\n    return sum\n}\nfunction fun2(n) {\n    let sum = 0, sum1 = 0, i = 0, j = 0; \n    for(; i <= n; i++) { // 循环1\n        sum += i; \n    }\n    for(i = 0; i <= n; i++) { // 循环2\n        for(j = 0; j <= n; j++) { \n            sum += i * j; \n        }\n    }\n    return sum\n}\nfunction fun3(n) {\n    let sum = 0, i = 0; \n    for(; i <= n; i++) { \n        sum += fun(i); \n    }\n    return sum\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("let i=1;\nwhile (i <= n)  {\n  i = i * 2;\n}\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br"),s("span",{staticClass:"line-number"},[this._v("4")]),s("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function fun(n) {\n    let a = [];\n    for (let i = 0; i < n; i++) {\n        a.push(i);\n    }\n    return a;\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("h3",{attrs:{id:"二-从chrome-v8源码看javascript数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-从chrome-v8源码看javascript数组","aria-hidden":"true"}},[this._v("#")]),this._v(" 二 从Chrome V8源码看JavaScript数组")])},function(){var n=this.$createElement,s=this._self._c||n;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("let arr = [1, 2, 3]\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("let array = [1, 2, 3]\n栈：\n\nlet stack = [1, 2, 3]\n// 进栈\nstack.push(4)\n// 出栈\nstcak.pop()\n队列：\n\nlet queue = [1, 2, 3]\n// 进队\nqueue.push(4)\n// 出队\nqueue.shift()\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// The JSArray describes JavaScript Arrays\n//  Such an array can be in one of two modes:\n//    - fast, backing storage is a FixedArray and length <= elements.length();\n//       Please note: push and pop can be used to grow and shrink the array.\n//    - slow, backing storage is a HashTable with numbers as keys.\nclass JSArray: public JSObject {\n public:\n  // [length]: The length property.\n  DECL_ACCESSORS(length, Object)\n    \n  // ...\n   \n  // Number of element slots to pre-allocate for an empty array.\n  static const int kPreallocatedArrayElements = 4;\n};\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// The JSArray describes JavaScript Arrays\n//  Such an array can be in one of two modes:\n//    - fast, backing storage is a FixedArray and length <= elements.length();\n//       Please note: push and pop can be used to grow and shrink the array.\n//    - slow, backing storage is a HashTable with numbers as keys.\nclass JSArray: public JSObject {\n public:\n  // [length]: The length property.\n  DECL_ACCESSORS(length, Object)\n    \n  // ...\n   \n  // Number of element slots to pre-allocate for an empty array.\n  static const int kPreallocatedArrayElements = 4;\n};\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("ol",[s("li",[s("p",[this._v("快数组（FastElements）\nFixedArray 是 V8 实现的一个类似于数组的类，它表示一段连续的内存，可以使用索引直接定位。新创建的空数组默认就是快数组。当数组满（数组的长度达到数组在内存中申请的内存容量最大值）的时候，继续 push 时， JSArray 会进行动态的扩容，以存储更多的元素。")])]),this._v(" "),s("li",[s("p",[this._v("慢数组（SlowElements）\n慢数组以哈希表的形式存储在内存空间里，它不需要开辟连续的存储空间，但需要额外维护一个哈希表，与快数组相比，性能相对较差。")])])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// src/objects/dictionary.h\nclass EXPORT_TEMPLATE_DECLARE(V8_EXPORT_PRIVATE) Dictionary\n    : public HashTable<Derived, Shape> {\n  using DerivedHashTable = HashTable<Derived, Shape>;\n\n public:\n  using Key = typename Shape::Key;\n  // Returns the value at entry.\n  inline Object ValueAt(InternalIndex entry);\n  inline Object ValueAt(const Isolate* isolate, InternalIndex entry);\n  \n  // ...\n};\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("ol",{attrs:{start:"3"}},[s("li",[this._v("什么时候会从 fast 转变为 slow 喃？\n从 Chrome V8 源码上看，")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// src/objects/js-objects.h\nstatic const uint32_t kMaxGap = 1024;\n\n// src/objects/dictionary.h\n// JSObjects prefer dictionary elements if the dictionary saves this much\n// memory compared to a fast elements backing store.\nstatic const uint32_t kPreferFastElementsSizeFactor = 3;\n\n// src/objects/js-objects-inl.h\n// If the fast-case backing storage takes up much more memory than a dictionary\n// backing storage would, the object should have slow elements.\n// static\nstatic inline bool ShouldConvertToSlowElements(uint32_t used_elements,\n                                               uint32_t new_capacity) {\n  uint32_t size_threshold = NumberDictionary::kPreferFastElementsSizeFactor *\n                            NumberDictionary::ComputeCapacity(used_elements) *\n                            NumberDictionary::kEntrySize;\n  // 快数组新容量是扩容后的容量3倍之多时，也会被转成慢数组\n  return size_threshold <= new_capacity;\n}\n\nstatic inline bool ShouldConvertToSlowElements(JSObject object,\n                                               uint32_t capacity,\n                                               uint32_t index,\n                                               uint32_t* new_capacity) {\n  STATIC_ASSERT(JSObject::kMaxUncheckedOldFastElementsLength <=\n                JSObject::kMaxUncheckedFastElementsLength);\n  if (index < capacity) {\n    *new_capacity = capacity;\n    return false;\n  }\n  // 当加入的索引值（例如例3中的2000）比当前容量capacity 大于等于 1024时，\n  // 返回true，转为慢数组\n  if (index - capacity >= JSObject::kMaxGap) return true;\n  *new_capacity = JSObject::NewElementsCapacity(index + 1);\n  DCHECK_LT(index, *new_capacity);\n  // TODO(ulan): Check if it works with young large objects.\n  if (*new_capacity <= JSObject::kMaxUncheckedOldFastElementsLength ||\n      (*new_capacity <= JSObject::kMaxUncheckedFastElementsLength &&\n       ObjectInYoungGeneration(object))) {\n    return false;\n  }\n  return ShouldConvertToSlowElements(object.GetFastElementsUsage(),\n                                     *new_capacity);\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("var arr = [1, 2, 3]\narr[2000] = 10;\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("ol",{attrs:{start:"4"}},[s("li",[this._v("什么时候会从 slow 转变为 fast 喃？\n我们已经知道在什么时候会出现由快变慢，那由慢变快就很简单了")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("static bool ShouldConvertToFastElements(JSObject object,\n                                        NumberDictionary dictionary,\n                                        uint32_t index,\n                                        uint32_t* new_capacity) {\n  // If properties with non-standard attributes or accessors were added, we\n  // cannot go back to fast elements.\n  if (dictionary.requires_slow_elements()) return false;\n  // Adding a property with this index will require slow elements.\n  if (index >= static_cast<uint32_t>(Smi::kMaxValue)) return false;\n  if (object.IsJSArray()) {\n    Object length = JSArray::cast(object).length();\n    if (!length.IsSmi()) return false;\n    *new_capacity = static_cast<uint32_t>(Smi::ToInt(length));\n  } else if (object.IsJSArgumentsObject()) {\n    return false;\n  } else {\n    *new_capacity = dictionary.max_number_key() + 1;\n  }\n  *new_capacity = Max(index + 1, *new_capacity);\n  uint32_t dictionary_size = static_cast<uint32_t>(dictionary.Capacity()) *\n                             NumberDictionary::kEntrySize;\n  // Turn fast if the dictionary only saves 50% space.\n  return 2 * dictionary_size >= *new_capacity;\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("// Number of element slots to pre-allocate for an empty array.\nstatic const int kPreallocatedArrayElements = 4;\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// js-objects.h\nstatic const uint32_t kMinAddedElementsCapacity = 16;\n\n// code-stub-assembler.cc\nNode* CodeStubAssembler::CalculateNewElementsCapacity(Node* old_capacity,\n                                                      ParameterMode mode) {\n  CSA_SLOW_ASSERT(this, MatchesParameterMode(old_capacity, mode));\n  Node* half_old_capacity = WordOrSmiShr(old_capacity, 1, mode);\n  Node* new_capacity = IntPtrOrSmiAdd(half_old_capacity, old_capacity, mode);\n  Node* padding =\n      IntPtrOrSmiConstant(JSObject::kMinAddedElementsCapacity, mode);\n  return IntPtrOrSmiAdd(new_capacity, padding, mode);\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("if (2 * length <= capacity) {\n  // If more than half the elements won't be used, trim the array.\n  isolate->heap()->RightTrimFixedArray(*backing_store, capacity - length);\n} else {\n  // Otherwise, fill the unused tail with holes.\n  BackingStore::cast(*backing_store)->FillWithHoles(length, old_length);\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var arr = [ [1, 2, 2], [3, 4, 5, 5], [6, 7, 8, 9, [11, 12, [12, 13, [14] ] ] ], 10]\n// 扁平化\nlet flatArr = arr.flat(4)\n// 去重\nlet disArr = Array.from(new Set(flatArr))\n// 排序\nlet result = disArr.sort(function(a, b) {\n    return a-b\n})\nconsole.log(result)\n// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])])}],!1,null,null,null);s.default=t.exports}}]);